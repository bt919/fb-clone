/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const SignUpIndexLazyImport = createFileRoute('/sign-up/')()
const HomeIndexLazyImport = createFileRoute('/home/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SignUpIndexLazyRoute = SignUpIndexLazyImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up/index.lazy').then((d) => d.Route))

const HomeIndexLazyRoute = HomeIndexLazyImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up/': {
      id: '/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/home': typeof HomeIndexLazyRoute
  '/sign-up': typeof SignUpIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/home': typeof HomeIndexLazyRoute
  '/sign-up': typeof SignUpIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/home/': typeof HomeIndexLazyRoute
  '/sign-up/': typeof SignUpIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/home' | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/home' | '/sign-up'
  id: '__root__' | '/' | '/home/' | '/sign-up/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  HomeIndexLazyRoute: typeof HomeIndexLazyRoute
  SignUpIndexLazyRoute: typeof SignUpIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  HomeIndexLazyRoute: HomeIndexLazyRoute,
  SignUpIndexLazyRoute: SignUpIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/home/",
        "/sign-up/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/home/": {
      "filePath": "home/index.lazy.tsx"
    },
    "/sign-up/": {
      "filePath": "sign-up/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
